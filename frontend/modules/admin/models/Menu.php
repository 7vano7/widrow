<?php

namespace frontend\modules\admin\models;

use frontend\models\form\UploadForm;
use Yii;
use yii\imagine\Image;
use yii\web\NotFoundHttpException;
use yii\web\UploadedFile;

/**
 * Class Menu
 * @package frontend\modules\admin\models
 */
class Menu extends \common\models\Menu
{
    public $parent_name;
    public $lang;
    public $menu_name;

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['position', 'url',], 'required'],
            [['status'], 'default', 'value' => self::STATUS_ACTIVE,],
            [['status', 'url', 'image'], 'string', 'max' => 255],
            [['position'], 'integer'],
            [['parent_name', 'lang'], 'safe'],
            [['is_menu'], 'default', 'value' => self::MENU_TRUE],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('admin', 'ID'),
            'status' => Yii::t('menu', 'Status'),
            'parent_name' => Yii::t('menu', 'Parent name'),
            'menu_name' => Yii::t('menu', 'Menu Name'),
            'url' => Yii::t('menu', 'Url'),
            'position' => Yii::t('menu', 'Position'),
            'image' => Yii::t('menu', 'Image'),
        ];
    }

    /**
     * Get Menu list
     * @return array
     */
    public function List()
    {
        $list = [];
        $menu = Menu::findAll(['status' => self::STATUS_ACTIVE]);
        if ($menu) {
            foreach ($menu as $data) {
                foreach ($data->menuLang as $item) {
                    if ($item->lang == Yii::$app->language) {
                        $list[$data->id] = $item->menu_name;
                    }
                }
            }
        }
        return $list;
    }

    /*
     * Get list of statuses
     * @return array
     */
    public function getStatuses(): array
    {
        return [
            self::STATUS_ACTIVE => Yii::t('menu', 'Active'),
            self::STATUS_DISABLE => Yii::t('menu', 'Disable'),
        ];
    }

    /**
     * Get relation MenuLang models
     * @return array
     */
    public function getMenuLang()
    {
        return $this->hasMany(MenuLang::className(), ['menu_id' => 'id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        MenuLang::deleteAll(['menu_id' => $this->id]);
        foreach ($this->lang as $lang) {
            $lang->menu_id = $this->id;
            $lang->save();
        }
    }

    /**
     * Upload file
     * @param $file string
     * @return mixed
     */
    public function saveImage($file): void
    {
        if ($this->isNewRecord) {
            $id = Article::find()->orderBy('id DESC')->one();
            if ($id === null) {
                $id = 1;
            } else {
                $id = $id->id + 1;
            }
        } else {
            $id = $this->id;
        }

        $path = Yii::getAlias('@frontend') . '/web/images/menu/' . $id . '/';
        $image = new UploadForm;
        $image->imageFile = UploadedFile::getInstance($this, $file);
        if (!is_dir($path)) {
            if (!mkdir($path, 0777) && !is_dir($path)) {
                throw new NotFoundHttpException(sprintf('Directory "%s" was not created', $path));
            }
        }

        if (!file_exists($path . $image->imageFile->name)) {
            if (!preg_match('/(png|jpg|jpeg|giff|gif)$/ui', $image->imageFile->extension, $match)) {
                $this->addError($file, Yii::t('admin', 'Error format'));
            } else {
                $this->$file = $image->upload($path);
            }
            if (!preg_match('/(giff|gif)$/ui', $this->$file, $match)) {
                if (file_exists($path . $this->$file)) {
                    if (!file_exists($path . 'resize_' . $this->$file) && preg_match('/\.(png|jpg|jpeg|giff)$/ui', $this->$file, $match)) {
                        if ($image = Image::thumbnail($path . $this->$file, 700, 400)->save($path . 'resize_' .
                            $this->$file, ['quality' => 50])) {
                            $this->$file = '/images/menu/' . $id . '/resize_' . $this->$file;
                        } else {
                            $this->$file = '/images/menu/' . $id . '/' . $this->$file;
                        }
                    }
                }
            }
            else {
                $this->$file = '/images/menu/' . $id .'/'. $this->$file;
            }
        } elseif (file_exists($path . 'resize_' . $image->imageFile->name)) {
            $this->$file = '/images/menu/' . $id . '/resize_' . $image->imageFile->name;
        }
    }
}
