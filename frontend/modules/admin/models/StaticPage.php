<?php

namespace frontend\modules\admin\models;

use common\models\StaticPageTranslate;
use Yii;

/**
 * Class StaticPage
 * @package frontend\modules\admin\models
 */
class StaticPage extends \common\models\StaticPage
{
    public $lang;
    public $title;

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['status', 'url'], 'required'],
            [['status'], 'default', 'value'=>self::STATUS_ACTIVE,],
            [['status', 'url'], 'string', 'max' => 255],
            ['position', 'default', 'value'=>self::POSITION_FOOTER],
            [['title', 'file'], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('admin','ID'),
            'status' => Yii::t('static', 'Status'),
            'url'=>Yii::t('static', 'Url'),
            'title'=>Yii::t('static', 'Title'),
        ];
    }

    public function List()
    {
        $list = [];
        $page = StaticPage::findAll(['status'=>self::STATUS_ACTIVE]);
        if($page)
        {
            foreach($page as $data)
            {
                foreach($data->pageTranslation as $item)
                {
                    if($item->lang == Yii::$app->language)
                    {
                        $list[$data->id] = $item->title;
                    }
                }
            }
        }
        return $list;
    }

    /*
     * Get list of statuses
     * @return array
     */
    public function getStatuses():array
    {
        return [
            self::STATUS_ACTIVE => Yii::t('static', 'Active'),
            self::STATUS_DISABLE => Yii::t('static', 'Disable'),
        ];
    }

    /**
     * Get relation StaticPageTranslation models
     * @return array
     */
    public function getPageTranslation()
    {
        return $this->hasMany(StaticPageTranslation::className(), ['static_page_id'=>'id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        StaticPageTranslation::deleteAll(['static_page_id'=>$this->id]);
        foreach ($this->lang as $lang)
        {
            $lang->static_page_id = $this->id;
            $lang->save();
        }
    }
}
